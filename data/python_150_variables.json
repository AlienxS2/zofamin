[
    {
        "date": "14.06.2023",
        "question": "Что такое переменные в Python?",
        "answer": "Переменные - это контейнеры для хранения значений данных.",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как создать переменные в Python?",
        "answer": "Python не имеет команды для объявления переменной. Переменная создается в момент присваивания ей значения. Пример:\nx = 5\ny = 'John'\nprint(x)\nprint(y)",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Могут ли переменные менять свой тип данных в Python?",
        "answer": "Да, переменные в Python не требуют объявления определенного типа данных и могут менять тип после присваивания значения. Пример:\nx = 4 # x - целочисленного типа\nx = 'Sally' # x теперь строкового типа\nprint(x)",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Что такое приведение типов (casting) в Python?",
        "answer": "Если вы хотите указать тип данных переменной, вы можете воспользоваться приведением типов (casting). Пример:\nx = str(3) # x будет '3'\ny = int(3) # y будет 3\nz = float(3) # z будет 3.0",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как получить тип данных переменной в Python?",
        "answer": "Вы можете получить тип данных переменной с помощью функции type(). Пример:\nx = 5\ny = 'John'\nprint(type(x))\nprint(type(y))",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Можно ли использовать одинарные и двойные кавычки для объявления строковых переменных в Python?",
        "answer": "Да, строковые переменные могут быть объявлены как с использованием одинарных, так и с использованием двойных кавычек. Пример:\nx = 'John'\n# то же самое, что\nx = 'John'",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Чувствительны ли переменные к регистру (case-sensitive) в Python?",
        "answer": "Да, имена переменных в Python чувствительны к регистру. Пример:\n\nЭто создаст две переменные:\na = 4\nA = 'Sally'\n# Переменная A не перезапишет a",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Какие правила существуют для именования переменных в Python?",
        "answer": "Существуют следующие правила для именования переменных в Python:\n\n- Имя переменной должно начинаться с буквы или символа подчеркивания.\n- Имя переменной не может начинаться с цифры.\n- Имя переменной может содержать только буквенно-цифровые символы и символ подчеркивания (A-z, 0-9 и _).\n- Имена переменных чувствительны к регистру (age, Age и AGE - это три разные переменные).\n- Имя переменной не может быть одним из ключевых слов Python.",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Какие имена переменных являются допустимыми?",
        "answer": "Примеры допустимых имен переменных:\nmyvar = 'John'\nmy_var = 'John'\n_my_var = 'John'\nmyVar = 'John'\nMYVAR = 'John'\nmyvar2 = 'John'",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Какие имена переменных являются недопустимыми?",
        "answer": "Примеры недопустимых имен переменных:\n2myvar = 'John'\nmy-var = 'John'\nmy var = 'John'",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как сделать имена переменных с несколькими словами более читаемыми?",
        "answer": "Существует несколько техник, которые можно использовать, чтобы сделать имена переменных с несколькими словами более читаемыми:\n\n- Camel Case: каждое слово, кроме первого, начинается с заглавной буквы (myVariableName = 'John').\n- Pascal Case: каждое слово начинается с заглавной буквы (MyVariableName = 'John').\n- Snake Case: каждое слово разделяется символом подчеркивания (my_variable_name = 'John').",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как в Python присвоить значения нескольким переменным одновременно?",
        "answer": "В Python вы можете присваивать значения нескольким переменным в одной строке:\n\nПример:\nx, y, z = 'Orange', 'Banana', 'Cherry'\nprint(x)\nprint(y)\nprint(z)\n\nПримечание: Убедитесь, что количество переменных соответствует количеству значений, иначе возникнет ошибка.",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как присвоить одно значение нескольким переменным в Python?",
        "answer": "Вы можете присвоить одно значение нескольким переменным в одной строке:\n\nПример:\nx = y = z = 'Orange'\nprint(x)\nprint(y)\nprint(z)",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Что такое распаковка значений в Python?",
        "answer": "Если у вас есть коллекция значений в списке, кортеже и т.д., Python позволяет извлечь значения в переменные. Это называется распаковкой.\n\nПример:\n\nРаспаковка списка:\nfruits = ['apple', 'banana', 'cherry']\nx, y, z = fruits\nprint(x)\nprint(y)\nprint(z)",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как вывести переменные в Python?",
        "answer": "В Python для вывода переменных часто используется функция print().\n\nПример:\nx = 'Python is awesome'\nprint(x)\n\nВ функции print() можно выводить несколько переменных, разделяя их запятой:\n\nПример:\nx = 'Python'\ny = 'is'\nz = 'awesome'\nprint(x, y, z)\n\nТакже можно использовать оператор + для вывода нескольких переменных:\n\nПример:\nx = 'Python '\ny = 'is '\nz = 'awesome'\nprint(x + y + z)\n\nОбратите внимание на пробел после 'Python ' и 'is ', без них результат был бы 'Pythonisawesome'.\n\nДля чисел символ + работает как математический оператор:\n\nПример:\nx = 5\ny = 10\nprint(x + y)\n\nВ функции print(), если вы пытаетесь объединить строку и число с помощью оператора +, Python выдаст ошибку:\n\nПример:\nx = 5\ny = 'John'\nprint(x + y)\n\nЛучший способ вывести несколько переменных в функции print() - это разделить их запятыми, что позволяет работать с разными типами данных:\n\nПример:\nx = 5\ny = 'John'\nprint(x, y)",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Что такое глобальные переменные в Python?",
        "answer": "Глобальные переменные в Python - это переменные, созданные вне функции и доступные как внутри функций, так и вне их.",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как использовать глобальную переменную внутри функции?",
        "answer": "Для использования глобальной переменной внутри функции нужно просто обратиться к ней по имени. Например, если глобальная переменная называется 'x', то можно написать 'print(\"Python is \"+ x)' для вывода значения глобальной переменной.",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Что произойдет, если создать локальную переменную с тем же именем, что и у глобальной переменной?",
        "answer": "Если создать локальную переменную с тем же именем, что и у глобальной переменной, то локальная переменная будет существовать только внутри функции и скроет значение глобальной переменной. Глобальная переменная сохранивает свое значение.",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как объявить глобальную переменную внутри функции?",
        "answer": "Для объявления глобальной переменной внутри функции используется ключевое слово 'global'. Например, 'global x' объявит переменную 'x' как глобальную внутри функции.",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "14.06.2023",
        "question": "Как изменить значение глобальной переменной внутри функции?",
        "answer": "Для изменения значения глобальной переменной внутри функции необходимо использовать ключевое слово 'global' перед именем переменной. Например, можно написать 'global x' перед присваиванием нового значения переменной 'x'.",
        "difficulty": "2",
        "memory": "0"
    }
]
