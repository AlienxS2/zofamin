[
    {
        "date": "01.01.2020",
        "question": "Как создать переменную в Python?",
        "answer": "Для создания переменной в Python нужно выбрать имя переменной и присвоить ей значение, используя знак равенства (=).",
        "difficulty": "1",
        "memory": "0"
    },
    {
        "date": "02.02.2020",
        "question": "Чем отличается список (list) от кортежа (tuple) в Python?",
        "answer": "Основное отличие между списками и кортежами в Python заключается в их изменяемости. Списки являются изменяемыми (mutable), что означает, что их элементы можно изменять, добавлять или удалять. Кортежи же являются неизменяемыми (immutable) и после создания не могут быть изменены.",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "03.03.2020",
        "question": "Что такое условный оператор if-else в Python?",
        "answer": "Условный оператор if-else в Python позволяет выполнить определенные действия в зависимости от выполнения условия. Если условие истинно (True), то выполняется блок кода, который следует за оператором if. В противном случае, если условие ложно (False), выполняется блок кода, следующий за оператором else.",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "04.04.2020",
        "question": "Каким образом можно преобразовать строку в целое число в Python?",
        "answer": "Для преобразования строки в целое число в Python можно использовать функцию int(). Например, int('42') вернет целое число 42.",
        "difficulty": "1",
        "memory": "1"
    },
    {
        "date": "05.05.2020",
        "question": "Что такое генераторы (generators) в Python?",
        "answer": "Генераторы (generators) в Python - это функции, которые возвращают последовательность значений, не храня их все в памяти сразу. Вместо этого они возвращают одно значение за раз, запоминая свое состояние между вызовами. Это позволяет создавать эффективные итераторы для работы с большими объемами данных или бесконечными последовательностями.",
        "difficulty": "3",
        "memory": "0"
    },
    {
        "date": "06.06.2020",
        "question": "Что такое lambda-функции в Python?",
        "answer": "Lambda-функции в Python - это анонимные (безымянные) функции, которые могут быть определены в одной строке кода. Они полезны в случаях, когда требуется определить небольшую функцию без необходимости использования отдельного оператора def. Lambda-функции могут принимать любое количество аргументов, но могут содержать только одно выражение.",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "07.07.2020",
        "question": "Как проверить наличие файла в Python?",
        "answer": "Для проверки наличия файла в Python можно использовать функцию os.path.exists(). Она возвращает True, если файл существует, и False в противном случае. Например, os.path.exists('myfile.txt') проверяет, существует ли файл myfile.txt в текущей директории.",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "08.08.2020",
        "question": "Каким образом можно сортировать список (list) в Python?",
        "answer": "Для сортировки списка (list) в Python можно использовать метод sort(). Например, myList.sort() отсортирует список myList в порядке возрастания. Также можно использовать функцию sorted(), которая возвращает отсортированную копию списка, не изменяя исходный список.",
        "difficulty": "2",
        "memory": "0"
    },
    {
        "date": "09.09.2020",
        "question": "Как обработать исключение (ошибку) в Python?",
        "answer": "Для обработки исключений (ошибок) в Python используется конструкция try-except. Код, который может вызвать исключение, помещается в блок try. Если исключение происходит, то управление передается в соответствующий блок except, где можно выполнить необходимые действия по обработке ошибки.",
        "difficulty": "2",
        "memory": "1"
    },
    {
        "question": "111111111",
        "answer": "222222222",
        "difficulty": 10,
        "date": "11-11-2020",
        "memory": 0
    },
    {
        "question": "3453245345345",
        "answer": "234523452345345",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    },
    {
        "question": "232323232 пкр 4ци6г ц46гиц46ги",
        "answer": "й236мц3567и ык6гит459 кыег8и5 у68",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    },
    {
        "question": "34м3ц57м457м45м7547ми457им457им457им4567им4567им47и45\n7и34\n57\n34и\n346834683468",
        "answer": "ц5м4ц5м745м7457м8\n245м24824м686348м\n8м46823648м34684368\n245м8248м3468м368\n346м834683568",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    },
    {
        "question": "ц467м4у57миц4578иц4578ц45",
        "answer": "78иц457ц4578иц45846",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    },
    {
        "question": "ц467м4у57миц4578иц4578ц45",
        "answer": "78иц457ц4578иц45846",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    },
    {
        "question": "34м3ц57м457м45м7547ми457им457им457им4567им4567им47и45\n7и34\n57\n34и\n346834683468",
        "answer": "ц5м4ц5м745м7457м8\n245м24824м686348м\n8м46823648м34684368\n245м8248м3468м368\n346м834683568",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    },
    {
        "question": "Вопроусвва ва \tпроус",
        "answer": "Ответус!",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    },
    {
        "question": "Вопроус 222\tВопроус 222Вопроус 222Вопроус 222",
        "answer": "ОТВУТУССССС",
        "difficulty": 10,
        "date": "01-01-2020",
        "memory": 0
    }
]