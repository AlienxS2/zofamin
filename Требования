Сделай тоже самое для этой статьи:

В ответе пиши только список с вопросами и ответами, т.е. только JSON, не нужно писать: Конечно, вот список вопросов с ответами для самопроверки по статье "Символы и строки в Python": или что-то еще в таком роде, только ответ на мой вопрос.





Напиши приложение на python  графическим интерфейсом.
Приложение должно:
1. При запуске открыть главный экран и развернуться на весь экран.
2. Показать следующие кнопки на главном экране:
- "открыть"
- "обучение"
- "добавить"
- "редактировать"
- "удалить"
- "сохранить"
- "выйти"
3. Показать таблицу общей шириной на весь экран и по высоте на всё свободное место на главном экране состоящую из 6 столбцов:
- № (целые положительные числа от 1 и далее +1)
- Дата (формат ДД-ММ-ГГГГ)
- Вопрос (текстовое поле)
- Ответ (текстовое поле)
- Сложность (целая цифра от 1 до 10)
- Повтор (значения только "Да" или "Нет")
4. Какие могут быть состояния главного экрана:
- "файл не открыт": в этом случае активны только кнопки открыть и выйти
- "файл открыт": в этом случае активны все кнопки
5. При нажатии на кнопку "открыть" открывается выбор файла для открытия формата json в кодировке utf-8 и все дальнейшие действия происходят в кодировке utf-8, при открытии файла программа проверяет, является ли открываемый файл файлом формата json, при чём именно следующего формата:
[
  {
    "question": "Как создать переменную в Python?",
    "answer": "Для создания переменной в Python нужно выбрать имя переменной и присвоить ей значение, используя знак равенства (=).",
    "difficulty": "1",
    "last_answered": "01.01.2020",
    "forced": "1"
  }
]
И если файл подходит, она его откроет, а если нет, сообщит об ошибке и не станет открывать файл.
Если файл отрыт удачно, то система переходит в режим "файл открыт".
6. В режиме "файл открыт" на главном экране выводится информация из открытого файла json в табличной форме, где первый столбец с заголовком "№" - это номер строки, второй столбец с заголовком "Дата" - это поле "last_answered", третий столбец с заголовком "Вопрос" - это поле "question", четвётый столбец с заголовком "Ответ" - это поле "answer", пятый столбец с заголовком "Сложность" - это поле "difficulty", шестой столбец с заголовком "Повтор" - поле "forced". В столбец "Повтор" в зависимости от содержимого поля "forced" выводится "Да", если значение "1" и "Нет", если значение "2". Все кнопки становятся активны.
Далее функционал для режима "файл открыт":
7. При нажатии на кнопку "обучение" Программа выводит новое окно "Зофамин" на весь экран для прохождения пользователем обучения по вопросам из открытого json файла.
Сначала окно "Зофамин" находится в режиме "Спросил".
В режиме "Спросил" окно "Зофамин" содержит следующие поля и кнопки:
- текст вопроса;
- кнопку "показать ответ"
- кнопку "завершить".
Приложение формирует очередь из вопросов, которые будет поочереди предлагать пользователю в оке "Зофамин", текст вопроса берётся из json файла, при этом вопрос подбирается для пользователя приложением, учитывая сложность и время, прошедшее с предыдущего ответа: чем больше сложность и чем больше дней прошло с момента последнего ответа, тем выше вероятность, что данный вопрос окажется следующим на очереди. Очеред формируется таким образом, что каждый второй вопрос - это вопрос с пометкой "Да" ("forced": "1"), при этом присутствует некоторый рандом при выборе вопросов.
Нажатие Пользователем на кнопку "показать ответ" переводит окно "Зофамин" в режим "Ответил".
В этом режиме в дополнение к тексту вопроса Программа показывает Пользователю текст ответа ("answer"), а так же предлагает указать сложность вопроса цифрой целой положительной от 1 до 10 ("difficulty"), а так же отметить режим поставив ли не поставив галочку на поле Повтор ("forced"), а так же появляется кнопка "далее".
Пользовтель нажимает на кнопку "далее" и переходит к следующему вопросу, при этом вся введенная информация на предыдущем шаге сохраняется в json, а окно "Зофамин" переходит в состояние "Спросил".
Режим обучения продолжается, пока Пользователь не нажмёт на кнопку "завершить".
Кнопка "завершить" возвращает пользователя в главное меню.
8. Кнопка в главном меню: "добавить" выводит окно "Добавление", где пользователю предлагают ввести текст вопроса, ввести текст ответа, указать сложность от 1 до 10 и отметить Поврот, а так же нажать кнопку "Сохранить", которая закроет окно "Добавление" и сохранит введённую информацию в конец файле json в требуемом формате и в формате utf-8, либо Пользователь нажмёт на кнопку "отмена", которая закроет окно "Добавление" и вернёт Пользователя на главный экран.  По умолчанию сложность вопроса должна быть установлена на 10. Дата на 01-01-2020. После сохранения нового вопроса он должен быть добавлен в коллекцию и отображен в таблице.
9. Кнопка "удалить" удалит выделенный в главном меню в таблице в строке блок json файла, соответствующий этой строке в программе.
